{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Academy Post API - FSW1",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "My Github",
    "url": "https://github.com/TheReVeaLz"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "tags": [
    {
      "name": "cars",
      "description": "Operations about your cars"
    },
    {
      "name": "user",
      "description": "Operations about your user"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Get all car list",
        "description": "Get all car list",
        "operationId": "getCarList",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OK"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/Car"
                              },
                              {
                                "$ref": "#/components/schemas/Car2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cars"
        ],
        "summary": "Create car data",
        "description": "Create car data",
        "operationId": "createCar",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "description": "Create a new car data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data was created successfully."
                    },
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Car"
                        },
                        {
                          "$ref": "#/components/schemas/Car2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body is missing."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "cars"
        ],
        "summary": "Get a car data",
        "description": "Get a car data",
        "operationId": "getCarDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of car to get the data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Car"
                    },
                    {
                      "$ref": "#/components/schemas/Car2"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to get the data. Data not found"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to get the data. invalid input syntax for type uuid: \"xxxxxx-xxxxxx-xxxxxx-xxxxxx\""
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cars"
        ],
        "summary": "Delete a car",
        "description": "Delete a car",
        "operationId": "deleteCar",
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of car to get the data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Deleted successfully."
                    },
                    "data": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/Car"
                        },
                        {
                          "$ref": "#/components/schemas/Car2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to get the data. Data not found"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to get the data. invalid input syntax for type uuid: \"xxxxxx-xxxxxx-xxxxxx-xxxxxx\""
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register new user",
        "description": "Register new user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "Register new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data was created successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/User3"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body is missing."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to create data. Validation error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user",
        "description": "Login user",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RootLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OK"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Login successfully."
                        },
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/User"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "token": {
                                  "type": "string",
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQyZDZkNzkyLWZlNzUtNDYxMy1iMWMyLTU3OWVkMDU2NGIzYyIsImlhdCI6MTY5NzgzNDE3OSwiZXhwIjoxNjk3ODM3Nzc5fQ.JHrFKoKLtze1NwbWoKLsZR3-Gs3LtT5MtHJG-WVmyPs"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Please input email and password."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Email or password is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Email or password is invalid."
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all user list",
        "description": "Get all user list",
        "operationId": "getUserList",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OK"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/User"
                              },
                              {
                                "$ref": "#/components/schemas/User2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Unauthorized"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "FORBIDDEN."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Token expired",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "jwt expired"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/current-user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user information",
        "description": "Get current user information",
        "operationId": "currentUser",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OK"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Login successfully."
                        },
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Please input email and password."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invalid token or JWT expired",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "enum": [
                            "invalid token",
                            "jwt expired"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/admin/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register new admin",
        "description": "Register new admin",
        "operationId": "registerAdmin",
        "security": [
          {
            "api_key": []
          }
        ],
        "requestBody": {
          "description": "Register new admin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAdmin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Data was created successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/User2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Body is missing."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Unauthorized"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invalid operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FAIL"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Failed to create data. Validation error"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OK": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "message": {
            "type": "string",
            "example": "Success"
          }
        }
      },
      "FAIL": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "FAIL"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CarRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Create Car"
          },
          "type": {
            "type": "string",
            "example": "Create"
          },
          "image": {
            "type": "string",
            "example": "image/cars1.jpg"
          },
          "capacity": {
            "type": "integer",
            "example": 4
          },
          "rentPerDay": {
            "type": "integer",
            "example": 200000
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean lobortis, ex ut auctor molestie, mauris est porttitor mi, nec pellentesque augue quam et nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean eget quam metus."
          },
          "availableAt": {
            "type": "string",
            "example": "2023-10-20T13:08:58.007Z"
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "8d7c8fb6-d018-4175-a5fc-2a462fc3b62b"
          },
          "name": {
            "type": "string",
            "example": "Dummy Name 1"
          },
          "type": {
            "type": "string",
            "example": "Type Dummy 1"
          },
          "image": {
            "type": "string",
            "example": "image/cars1.jpg"
          },
          "capacity": {
            "type": "integer",
            "example": 4
          },
          "rentPerDay": {
            "type": "integer",
            "example": 200000
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean lobortis, ex ut auctor molestie, mauris est porttitor mi, nec pellentesque augue quam et nibh. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean eget quam metus."
          },
          "availableAt": {
            "type": "string",
            "example": "2023-10-20T13:08:58.007Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-20T13:08:58.007Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-20T13:08:58.007Z"
          },
          "deletedAt": {
            "type": "string",
            "example": null
          },
          "created": {
            "type": "object"
          },
          "updated": {
            "type": "object"
          },
          "deleted": {
            "type": "object"
          }
        }
      },
      "Car2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "566dde14-5c11-42eb-b86d-94bf41ad3c3b"
          },
          "name": {
            "type": "string",
            "example": "Dummy Name 2"
          },
          "type": {
            "type": "string",
            "example": "Type Dummy 2"
          },
          "image": {
            "type": "string",
            "example": "image/cars2.jpg"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "rentPerDay": {
            "type": "integer",
            "example": 300000
          },
          "description": {
            "type": "string"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-10-20T11:08:58.007Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-20T11:08:58.007Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-20T11:08:58.007Z"
          },
          "deletedAt": {
            "type": "string",
            "example": null
          },
          "created": {
            "type": "object"
          },
          "updated": {
            "type": "object"
          },
          "deleted": {
            "type": "object"
          }
        }
      },
      "MemberRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "TESTER2"
          },
          "email": {
            "type": "string",
            "example": "test2@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "test"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082112345678"
          },
          "address": {
            "type": "string",
            "example": "Earth"
          }
        }
      },
      "RegisterAdmin": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "TESTER"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "test"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082112345678"
          },
          "address": {
            "type": "string",
            "example": "Earth"
          }
        }
      },
      "RootLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "root@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "root"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d2d6d792-fe75-4613-b1c2-579ed0564b3c"
          },
          "name": {
            "type": "string",
            "example": "root"
          },
          "email": {
            "type": "string",
            "example": "root@gmail.com"
          },
          "encryptedPassword": {
            "type": "string",
            "example": "$2b$10$CZWqOKzxtogiTgPNLmxMXORb0fEuZxr0qrEuh2exgpe5I8c6Zq.Du"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082112345678"
          },
          "address": {
            "type": "string",
            "example": "Earth"
          },
          "role": {
            "type": "string",
            "enum": [
              "ROOT",
              "ADMIN",
              "MEMBER"
            ],
            "example": "ROOT"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          }
        }
      },
      "User2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "640f98ab-951b-4b7b-845d-6e78b411b566"
          },
          "name": {
            "type": "string",
            "example": "TESTER"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "encryptedPassword": {
            "type": "string",
            "example": "$2b$10$P0VY83faE3Wy71l5ZGq4ZunVoxb6wy4q1SxZAZLU7PgOm4RMfw0oK"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082112345678"
          },
          "address": {
            "type": "string",
            "example": "Earth"
          },
          "role": {
            "type": "string",
            "enum": [
              "ROOT",
              "ADMIN",
              "MEMBER"
            ],
            "example": "ADMIN"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          }
        }
      },
      "User3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0d05f684-1a9c-4481-b5a8-cb7442cedeae"
          },
          "name": {
            "type": "string",
            "example": "TESTER2"
          },
          "email": {
            "type": "string",
            "example": "test2@gmail.com"
          },
          "encryptedPassword": {
            "type": "string",
            "example": "$2b$10$P0VY83faE3Wy71l5ZGq4ZunVoxb6wy4q1SxZAZLU7PgOm4RMfw0oK"
          },
          "phoneNumber": {
            "type": "string",
            "example": "082112345678"
          },
          "address": {
            "type": "string",
            "example": "Earth"
          },
          "role": {
            "type": "string",
            "enum": [
              "ROOT",
              "ADMIN",
              "MEMBER"
            ],
            "example": "MEMBER"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-18T13:42:59.162Z"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    }
  }
}